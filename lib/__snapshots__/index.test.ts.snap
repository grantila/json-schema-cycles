// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`large input (fast mode) should handle really large json schema 1`] = `
{
  "cyclic": [
    "Node",
    "ArrayExpression",
    "Expression",
    "AssignmentExpression",
    "LVal",
    "Identifier",
    "Decorator",
    "TypeAnnotation",
    "FlowType",
    "ArrayTypeAnnotation",
    "FunctionTypeAnnotation",
    "TypeParameterDeclaration",
    "TypeParameter",
    "FunctionTypeParam",
    "GenericTypeAnnotation",
    "QualifiedTypeIdentifier",
    "TypeParameterInstantiation",
    "InterfaceTypeAnnotation",
    "InterfaceExtends",
    "ObjectTypeAnnotation",
    "ObjectTypeProperty",
    "ObjectTypeSpreadProperty",
    "ObjectTypeIndexer",
    "ObjectTypeCallProperty",
    "ObjectTypeInternalSlot",
    "IntersectionTypeAnnotation",
    "NullableTypeAnnotation",
    "TupleTypeAnnotation",
    "TypeofTypeAnnotation",
    "UnionTypeAnnotation",
    "TSTypeAnnotation",
    "TSType",
    "TSFunctionType",
    "TSTypeParameterDeclaration",
    "TSTypeParameter",
    "RestElement",
    "TSConstructorType",
    "TSTypeReference",
    "TSEntityName",
    "TSQualifiedName",
    "TSTypeParameterInstantiation",
    "TSTypePredicate",
    "TSTypeQuery",
    "TSImportType",
    "TSTypeLiteral",
    "TSTypeElement",
    "TSCallSignatureDeclaration",
    "TSConstructSignatureDeclaration",
    "TSPropertySignature",
    "TSMethodSignature",
    "TSIndexSignature",
    "TSArrayType",
    "TSTupleType",
    "TSNamedTupleMember",
    "TSOptionalType",
    "TSRestType",
    "TSUnionType",
    "TSIntersectionType",
    "TSConditionalType",
    "TSInferType",
    "TSParenthesizedType",
    "TSTypeOperator",
    "TSIndexedAccessType",
    "TSMappedType",
    "TSExpressionWithTypeArguments",
    "MemberExpression",
    "PrivateName",
    "AssignmentPattern",
    "ObjectPattern",
    "ObjectProperty",
    "PatternLike",
    "ArrayPattern",
    "TSParameterProperty",
    "BinaryExpression",
    "CallExpression",
    "SpreadElement",
    "ConditionalExpression",
    "FunctionExpression",
    "Pattern",
    "BlockStatement",
    "Statement",
    "BreakStatement",
    "ContinueStatement",
    "DoWhileStatement",
    "ExpressionStatement",
    "ForInStatement",
    "VariableDeclaration",
    "VariableDeclarator",
    "ForStatement",
    "FunctionDeclaration",
    "IfStatement",
    "LabeledStatement",
    "ReturnStatement",
    "SwitchStatement",
    "SwitchCase",
    "ThrowStatement",
    "TryStatement",
    "CatchClause",
    "WhileStatement",
    "WithStatement",
    "ClassDeclaration",
    "ClassBody",
    "ClassMethod",
    "ClassPrivateMethod",
    "ClassProperty",
    "ClassPrivateProperty",
    "TSDeclareMethod",
    "ClassImplements",
    "ExportAllDeclaration",
    "ImportAttribute",
    "ExportDefaultDeclaration",
    "TSDeclareFunction",
    "ExportNamedDeclaration",
    "Declaration",
    "ImportDeclaration",
    "ImportSpecifier",
    "ImportDefaultSpecifier",
    "ImportNamespaceSpecifier",
    "DeclareClass",
    "DeclareFunction",
    "DeclaredPredicate",
    "Flow",
    "DeclareInterface",
    "DeclareModule",
    "DeclareModuleExports",
    "DeclareTypeAlias",
    "DeclareOpaqueType",
    "DeclareVariable",
    "DeclareExportDeclaration",
    "ExportSpecifier",
    "ExportNamespaceSpecifier",
    "InterfaceDeclaration",
    "OpaqueType",
    "TypeAlias",
    "TypeCastExpression",
    "EnumDeclaration",
    "EnumBooleanBody",
    "EnumBooleanMember",
    "EnumNumberBody",
    "EnumNumberMember",
    "EnumStringBody",
    "EnumStringMember",
    "EnumDefaultedMember",
    "EnumSymbolBody",
    "TSInterfaceDeclaration",
    "TSInterfaceBody",
    "TSTypeAliasDeclaration",
    "TSEnumDeclaration",
    "TSEnumMember",
    "TSModuleDeclaration",
    "TSModuleBlock",
    "ExportDefaultSpecifier",
    "ForOfStatement",
    "TSImportEqualsDeclaration",
    "TSExportAssignment",
    "TSNamespaceExportDeclaration",
    "LogicalExpression",
    "NewExpression",
    "ObjectExpression",
    "ObjectMethod",
    "SequenceExpression",
    "ParenthesizedExpression",
    "UnaryExpression",
    "UpdateExpression",
    "ArrowFunctionExpression",
    "ClassExpression",
    "MetaProperty",
    "TaggedTemplateExpression",
    "TemplateLiteral",
    "YieldExpression",
    "AwaitExpression",
    "OptionalMemberExpression",
    "OptionalCallExpression",
    "JSXElement",
    "JSXOpeningElement",
    "JSXMemberExpression",
    "JSXAttribute",
    "JSXFragment",
    "JSXExpressionContainer",
    "JSXSpreadChild",
    "JSXSpreadAttribute",
    "JSXClosingElement",
    "BindExpression",
    "DoExpression",
    "RecordExpression",
    "TupleExpression",
    "TSAsExpression",
    "TSTypeAssertion",
    "TSNonNullExpression",
    "Binary",
    "Block",
    "Program",
    "BlockParent",
    "StaticBlock",
    "Class",
    "CompletionStatement",
    "Conditional",
    "EnumBody",
    "EnumMember",
    "ExportDeclaration",
    "ExpressionWrapper",
    "File",
    "FlowDeclaration",
    "FlowPredicate",
    "For",
    "ForXStatement",
    "Function",
    "FunctionParent",
    "Immutable",
    "JSX",
    "Literal",
    "Loop",
    "Method",
    "ModuleDeclaration",
    "ModuleSpecifier",
    "ObjectMember",
    "PipelineBareFunction",
    "PipelineTopicExpression",
    "Placeholder",
    "Private",
    "Property",
    "Pureish",
    "RestProperty",
    "Scopable",
    "SpreadProperty",
    "Terminatorless",
    "UnaryLike",
    "UserWhitespacable",
    "While",
    "Aliases",
  ],
  "dependencies": [
    "AnyTypeAnnotation",
    "ArgumentPlaceholder",
    "BooleanTypeAnnotation",
    "BooleanLiteralTypeAnnotation",
    "NullLiteralTypeAnnotation",
    "ExistsTypeAnnotation",
    "Variance",
    "StringLiteral",
    "MixedTypeAnnotation",
    "EmptyTypeAnnotation",
    "NumberLiteralTypeAnnotation",
    "NumberTypeAnnotation",
    "StringLiteralTypeAnnotation",
    "StringTypeAnnotation",
    "SymbolTypeAnnotation",
    "ThisTypeAnnotation",
    "VoidTypeAnnotation",
    "TSAnyKeyword",
    "TSBooleanKeyword",
    "TSBigIntKeyword",
    "TSIntrinsicKeyword",
    "TSNeverKeyword",
    "TSNullKeyword",
    "TSNumberKeyword",
    "TSObjectKeyword",
    "TSStringKeyword",
    "TSSymbolKeyword",
    "TSUndefinedKeyword",
    "TSUnknownKeyword",
    "TSVoidKeyword",
    "TSThisType",
    "Noop",
    "NumericLiteral",
    "TSLiteralType",
    "BooleanLiteral",
    "BigIntLiteral",
    "V8IntrinsicIdentifier",
    "JSXIdentifier",
    "JSXNamespacedName",
    "DebuggerStatement",
    "EmptyStatement",
    "DeclareExportAllDeclaration",
    "InferredPredicate",
    "TSExternalModuleReference",
    "DirectiveLiteral",
    "Directive",
    "NullLiteral",
    "RegExpLiteral",
    "ThisExpression",
    "Super",
    "TemplateElement",
    "Import",
    "JSXOpeningFragment",
    "JSXClosingFragment",
    "JSXText",
    "JSXEmptyExpression",
    "PipelinePrimaryTopicReference",
    "DecimalLiteral",
    "InterpreterDirective",
    "CommentBlock",
    "CommentLine",
    "FlowBaseAnnotation",
    "NumberLiteral",
    "RegexLiteral",
    "TSBaseType",
  ],
  "dependents": [
    "Comment",
  ],
}
`;
